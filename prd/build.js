/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

eval("let log = x => {\n    console.log(x);\n};\n\n/*url增加参数\r\n* @url url\r\n* @value 参数以及值\r\n* */\nlet appendUrlPara = (url, value) => {\n    if (url.indexOf('?') > -1) {\n        return url += '?' + value;\n    } else {\n        return url += '&' + value;\n    }\n};\n/*快速排序-升序\r\n* @pivot 基准值，默认为第一个\r\n* @rest 除基准值以外的值的数组。\r\n* Usage: quickSortAsc([2331])\r\n* Result [1233]\r\n* */\nlet quickSortAsc = arr => {\n    if (!arr.length) {\n        return [];\n    }\n    const [pivot, ...rest] = arr;\n    return [...quickSortAsc(rest.filter(x => x < pivot)), pivot, ...quickSortAsc(rest.filter(x => x >= pivot))];\n};\n/*快速排序-降序\r\n * @pivot 基准值，默认为第一个\r\n * @rest 除基准值以外的值的数组。\r\n * Usage: quickSortDesc([2331])\r\n * Result [3321]\r\n * */\nlet quickSortDesc = arr => {\n    if (!arr.length) {\n        return [];\n    }\n    const [pivot, ...rest] = arr;\n    return [...quickSortDesc(rest.filter(x => x > pivot)), pivot, ...quickSortDesc(rest.filter(x => x <= pivot))];\n};\n/*一维数组合并去重,\r\n* @order 升降序，取值asc/desc/other,必填\r\n* @arr 数组，可多填\r\n* Usage: unique('asc',[2331],[43])\r\n* Result [1234]\r\n* */\nlet unique = (order = 'default', ...arr) => {\n    let a = [];\n    let c = [];\n    for (let b = 0; b < arr.length; b++) {\n        c.push(...arr[b]);\n    }\n    for (let i = 0; i < c.length; i++) {\n        if (!a.includes(c[i])) {\n            a.push(c[i]);\n        }\n    }\n    switch (order) {\n        case 'asc':\n            a = quickSortAsc(a);\n            break;\n        case 'desc':\n            a = quickSortDesc(a);\n            break;\n        default:\n            break;\n    }\n    return a;\n};\n/*url中取参\r\n* 返回一个JSON对象\r\n* */\nlet getUrlParam = () => {\n    let url = location.href;\n    let paraString = url.substring(url.indexOf('?') + 1, url.length).split('&');\n    let obj = {};\n    for (let i = 0; i < paraString.length; i++) {\n        let name = paraString[i].substring(0, paraString[i].indexOf('='));\n        obj[name] = paraString[i].substring(paraString[i].indexOf('=') + 1, paraString[i].length);\n    }\n    return obj;\n};\n/*删除字符串左右两端空格\r\n* @str 字符串\r\n* */\nlet trim = str => str.replace(/(^\\s*)|(\\s*$)/g, '');\n/*删除字符串左端空格\r\n* @str 字符串\r\n* */\nlet trimLeft = str => str.replace(/(^\\s*)/g, '');\n/*删除字符串右端空格\r\n* @str 字符串\r\n* */\nlet trimRight = str => str.replace(/(\\s*$)/g, '');\n\n/*格式化浮点数，保留小数并四舍五入\r\n* @num 浮点数\r\n* @digit 位数,选填,默认为2\r\n* 不对NAN进行处理，方便报错。\r\n* Usage: floatNumFormatted(1)\r\n* Result 1.00\r\n* */\nlet floatNumFormatted = (num, digit = 2) => Number.parseFloat(num).toFixed(digit);\n/*格式化文件大小\r\n* @size 文件大小，单位：字节\r\n* 不对NAN进行处理，方便报错\r\n* Usage: fileSizeFormatted(5439)\r\n* Result 5.31KB\r\n* */\nlet fileSizeFormatted = (size = 'default') => {\n    size = Number.parseInt(size);\n    let i = 0;\n    let unit = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB', 'BB'];\n    let getIndex = _size => {\n        if (_size >= 1024) {\n            i++;\n            return getIndex(_size / 1024);\n        }\n        return _size;\n    };\n    return floatNumFormatted(getIndex(size), 2) + ' ' + unit[i];\n};\n/*数字阅读格式化，从右开始，每3位增加一个逗号，小数位不增加逗号\r\n* @num 数字，string或者num都可。\r\n* Usage: commaFormatted(2222.12356)\r\n* Result 2,222.12356\r\n* */\nlet commaFormatted = num => {\n    num = num.toString();\n    let a = num.split('.');\n    let b = a[0];\n    let c = a[1];\n    let d = [];\n    if (a.length > 2) {\n        return 'wrong Num';\n    }\n    while (b.length > 3) {\n        let e = ',' + b.substring(b.length - 3, b.length);\n        b = b.substring(0, b.length - 3);\n        d.unshift(e);\n    }\n    return b + d + '.' + c;\n};\n/*保留小数点n位数并数字阅读格式化\r\n* @num 数字\r\n* @digit 位数\r\n* Usage: moneyFormatted(2222.12356)\r\n* Result 2,222.12\r\n* */\nlet moneyFormatted = (num, digit) => commaFormatted(floatNumFormatted(num, digit));\n\n/*基数词序列化为序数词\r\n* @num 数字\r\n* 若有小数部分则小数部分被抹去。\r\n* Usage: ordinalFormatted(22)\r\n* Result 22st\r\n* */\nlet ordinalFormatted = num => {\n    num = Math.trunc(num);\n    let a = num.toString();\n    a = [...a];\n    let b = a[a.length - 1] % 10;\n    let c = ['th', 'st', 'nd', 'rd'];\n    c.length = 10;\n    c.fill('th', 4, 10);\n    return num + c[b];\n};\n/*格式百分比化，并保留n位小数\r\n* @数字\r\n* @digit 位数，选填，默认值为2\r\n* Usage: percentFormatted(6.565252)\r\n* Result: 656.53%\r\n* */\nlet percentFormatted = (num, digit = 2) => floatNumFormatted(num * 100, digit) + '%';\n/*获取cookie\r\n*并转化为json格式\r\n* Usage: cookieGet\r\n* Result: {key:val,key2:val2}\r\n* */\nlet cookieGetAll = () => {\n    let a = document.cookie.split(';');\n    let c = {};\n    for (let i = 0; i < a.length; i++) {\n        let d = a[i].substring(0, a[i].indexOf('='));\n        c[d] = a[i].substring(a[i].indexOf('=') + 1, a[i].length);\n    }\n    return c;\n};\n/*获取cookie指定值\r\n* @key 键名\r\n* Usage: cookieGetExact('username')\r\n* Result: val\r\n* */\nlet cookieGetExact = key => cookieGetAll()[key];\n/*cookie设置\r\n* @key 键名\r\n* @val 键值\r\n* @day 保存时间;单位：天;选填;默认为30天\r\n* Usage: cookieSet('userName','lwz')\r\n* */\nlet cookieSet = (key, val, day = 30) => {\n    let data = new Date();\n    data.setTime(data.getTime() + day * 24 * 60 * 60 * 1000);\n    document.cookie = key + '=' + val + ';path=/;expires=' + data;\n};\nlet cookieDeleteExact = (...keys) => {\n    // debugger\n    let data = new Date();\n\n    for (let key of keys) {\n        let val = cookieGetExact(key);\n        log(val);\n        // data.setTime(data.getTime()-1);\n        // document.cookie = key + '=' + val + ';path=/;expires=' + data ;\n    }\n};\n// log(cookieGetAll());\n// cookieSet('eee','321');\n// log(cookieGetExact('username'))\n// cookieDeleteExact('eee');\n// log(cookieGetAll());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n");

/***/ })
/******/ ]);